{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAOC,EAAiB,EAAjBA,MAAQC,EAAS,EAATA,GAC3B,OACI,sBAAKC,UAAY,sDAAjB,UACI,qBAAKC,IAAM,SAASC,IAAG,+BAA4BH,EAA5B,cAC3B,gCACI,6BAAKF,IACL,4BAAIC,WCYDK,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAYD,EAAOE,KAAI,SAACC,EAAOC,GACjC,OACA,cAAC,EAAD,CAEAT,GAAMK,EAAOI,GAAGT,GAChBF,KAAQO,EAAOI,GAAGX,KAClBC,MAASM,EAAOI,GAAGV,OAHXU,MAMZ,OACA,8BACKH,KCDMI,EAZG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKV,UAAY,MAAjB,SACA,uBAAOA,UAAY,mCACnBW,KAAO,SACPC,YAAc,gBACdC,SAAaH,OCENI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAS,CAACC,UAAY,SAAUC,OAAS,kBAAmBC,OAAS,SAA1E,SACKJ,EAAMK,YCkBJC,E,kDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAW,M,oBAG/B,WACI,OAAGG,KAAKJ,MAAMC,SACH,6DAEJG,KAAKX,MAAMK,a,GAhBEQ,aCkDbC,G,wDA3CX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAcD,EAAME,OAAOC,SAb3C,EAAKZ,MAAQ,CACTlB,OAAS,GACT4B,YAAc,IAJR,E,qDAQd,WAAoB,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACvB,OAASmC,S,oBAO3C,WAAU,IAAD,EAC2Bb,KAAKJ,MAA7BlB,EADH,EACGA,OAAQ4B,EADX,EACWA,YACVQ,EAAiBpC,EAAOqC,QAAO,SAAAC,GACjC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASZ,EAAYW,kBAEzD,OAAQvC,EAAOyC,OAIP,sBAAK7C,UAAY,KAAjB,UACI,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWU,aAAiBgB,KAAKI,iBACjC,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAUoC,WAR5B,gD,GAzBMZ,cCIHkB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.277784d0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name , email , id }) => {\r\n    return(\r\n        <div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt = 'robots' src = {`https://robohash.org/${id}?200x200`} />\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardArray = robots.map((user , i) => {\r\n        return (\r\n        <Card \r\n        key = { i } \r\n        id = {robots[i].id} \r\n        name = {robots[i].name} \r\n        email = {robots[i].email} />\r\n        );\r\n    })\r\n    return(\r\n    <div>\r\n       { cardArray }\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return(\r\n        <div className = 'pa2'>\r\n        <input className = 'pa3 ba b--green bg-lightest-blue' \r\n        type = 'search' \r\n        placeholder = 'search robots' \r\n        onChange = { searchChange }\r\n        />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style = {{overflowY : 'scroll', border : '1px solid black', height : '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React , { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({ hasError : true })\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oooops. Some error occured.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots : [],\r\n            searchfield : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots : users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield : event.target.value })\r\n    }\r\n    \r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ? \r\n            <h1>Loading!!!</h1> : \r\n        \r\n            (\r\n                <div className = 'tc'>\r\n                    <h1 className = 'f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange = { this.onSearchChange }/>\r\n                    <Scroll>\r\n                    <ErrorBoundary>\r\n                    <CardList robots = {filteredRobots}/>\r\n                    </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}